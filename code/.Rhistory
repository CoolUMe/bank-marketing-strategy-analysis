save_plot = F
eda_cata <- function(group, data=bank){
print(table(bank %>% dplyr::select(!!sym(group)),useNA="ifany"))
group = group
if(if_plot){
layout <- matrix(c(1,1,1,1,4,4,4,0,0,
1,1,1,1,4,4,4,3,3,
2,2,2,2,4,4,4,3,3,
2,2,2,2,4,4,4,0,0), nrow = 4, byrow=TRUE)
# plot1
data %>%
ggplot(aes(x = !!sym(group),
fill = factor(y))) +
geom_bar(position = "stack") -> p1
# plot 2
data %>%
ggplot(aes(x = !!sym(group),
fill = factor(y))) +
geom_bar(position = "fill") -> p2
# plot3
data %>%
dplyr::select(temp = !!sym(group)) %>%
group_by(temp) %>%
dplyr::summarise(percent = n()) %>% ungroup %>%
mutate(percent = percent/sum(percent)) %>%
ggplot(aes(x="", y = percent, fill = temp)) +
geom_bar(width = 1, stat = 'identity') +
coord_polar("y", direction = -1) +
theme_void()+ ylab(group) +
geom_text(aes(label = percent),
position = position_stack(vjust=0.5)) +
scale_fill_discrete(name=group) -> p3
# plot 4
data %>%
dplyr::select(temp = !!sym(group),y) %>%
group_by(temp,y) %>%
dplyr::summarise(percent = n()) %>%
group_by(y) %>%
dplyr::summarise(temp=temp,percent = percent/sum(percent))  %>%
ggplot(aes(x = y, y = percent, fill = temp, label = temp)) +
geom_bar(stat = "identity") + ylab(group) +
geom_text(position = position_stack(vjust=0.5)) -> p4
multiplot(p1,p2,p3,p4,layout=layout)
}
if(save_plot){
png(paste0("../images/每个变量与Y/",group,"_分类型图.png"),width=1500,height=485)
multiplot(p1,p2,p3,p4,layout=layout)
dev.off()
}
}
eda_num <- function(var,data=bank){
if(if_plot){
ggplot(data = data,
aes(x = factor(y), y = !!sym(var))) + #
geom_flat_violin(aes(fill = factor(y)),
position = position_nudge(x = .2, y = 0),
trim = TRUE,
alpha = .4,
scale = "width") +
geom_point(aes(y = !!sym(var), color = factor(y)),
position = position_jitter(w = .15, h = 0.000000000002),
size = .001,
alpha = 0.4) +
geom_boxplot(width = .3,
outlier.shape = NA,
alpha = 0.5) +
labs(x="Result") +
coord_flip() +
scale_fill_manual(c("fail", "success"), values =colors,na.value = "#5f5f5f") +
scale_color_manual(c("fail", "success"), values =colors,na.value = "#5f5f5f") +
expand_limits(x = 3) +
theme_pubr()-> p
#print(p)
return(p)
}
if(save_plot){
ggsave(plot = p, filename = paste0("../images/每个变量与Y/",var,"_连续型图.png"),width=15,height=4.85)
}
}
eda_cata_num <- function(group, var, data=bank,flip = F,expand_limits=5.2, x_angle = 45){
plot =NA
if(if_plot){
ggplot(data = bank,
aes(x = as.factor(!!sym(group)), y = !!sym(var), fill = y)) + #
geom_flat_violin(position = position_nudge(x = .2, y = 0),
trim = TRUE,
alpha = .4,
scale = "width") +
geom_point(aes(y = !!sym(var), color = factor(y)),
position = position_jitter(width = .15),
size = .5,
alpha = 0.1) +
geom_boxplot(width = .3,
outlier.shape = NA,
alpha = 0.5) +
expand_limits(x = expand_limits) +
labs(x = group, y = var) +
guides(color=NULL, fill=guide_legend(title="Result:")) +
scale_fill_manual(#c("fail", "success"),
values =colors,na.value = "#5f5f5f")+
scale_color_manual(#c("fail", "success"),
values =colors,na.value = "#5f5f5f")+
guides(color=NULL) +
theme_pubr(base_size = 11, x.text.angle = x_angle) -> plot
if(flip){
plot = plot + coord_flip()
}
return(plot)
}
}
see = function(data){
View(data)
}
eda_withy <- function(var, data = bank, flip=F){
plot = NA
if(if_plot){
if(is.numeric(data %>% dplyr::select(!!sym(var)) %>%pull(1))){
data %>%
mutate(y = factor(y)) %>%
ggplot(aes(x = as.factor(y), y = !!sym(var))) + #
geom_flat_violin(position = position_nudge(x = .2, y = 0),
trim = TRUE,
alpha = .4,
scale = "width") +
geom_point(aes(y = !!sym(var), color = as.factor(y)),
position = position_jitter(w = .15, h = 0.000000000002),
size = .001,
alpha = 0.4) +
geom_boxplot(width = .3,
outlier.shape = NA,
alpha = 0.5) +
scale_x_discrete("Result", labels = c("yes" = "success", "no" = "fail")) +
scale_color_manual(labels = c("success", "fail"),values =colors[1:2]) +
labs(color = "Result") +
#coord_flip() +
theme(legend.position = "none")+
expand_limits(x = 3) + text_theme -> plot
}
if(is.factor(data %>% dplyr::select(!!sym(var)) %>% pull(1))){
data %>%
dplyr::select(temp = !!sym(var),y) %>%
group_by(temp,y) %>%
dplyr::summarise(percent = n()) %>%
group_by(y) %>%
dplyr::summarise(temp=temp,percent = percent/sum(percent))  %>%
mutate(y = factor(y)) %>%
ggplot(aes(x = y, y = percent, fill = temp, label = temp)) +
geom_bar(stat = "identity") + xlab(var) + ylab(paste0("% of ",var)) +
scale_x_discrete("y", labels = c("yes" = "sucess", "no" = "fail")) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
scale_fill_manual(values =colors,na.value = "#5f5f5f") +
guides(fill=guide_legend(title=var))+
geom_text(position = position_stack(vjust=0.5)) +  text_theme -> plot
}
if(flip){
plot = plot + coord_flip()
}
}
return(plot)
}
eda_y <- function(data = bank){
if(if_plot){
data %>%
ggplot(aes(x = y)) +
geom_bar(position = "stack")
}
}
```
### 个人信息类
- 不显著结果（无用代码）
```{r}
# if(if_plot){
# eda_num("age")
# eda_cata("job")
# eda_cata("marital")
# eda_num("education")
# eda_cata("education", bank%>% mutate(education = factor(education)))
# eda_cata("default")
# eda_cata("housing", bank %>% mutate(housing = factor(housing)))
# eda_cata("loan",bank %>% mutate(loan = factor(loan)))
#
# vcd::mosaic(~ education+housing +y+loan, data = temp, shade = TRUE,
#             labeling_args = list(abbreviate_labs = c(3, 10, 1)))}
```
#### 整体可视化
```{r}
if(if_plot){
multiplot(eda_withy("marital"),
eda_withy("default"),
eda_withy("loan"),
eda_withy("housing"),cols=4)}
if(if_plot){
multiplot(
eda_withy("job"),
eda_withy("education"),cols=2)}
#eda_withy("age")
```
#### 数据操作及原因
##### default的1较少，但NA显著，视为一个类
```{r}
if(if_plot){
eda_cata("default")
# 测试
## 处理前
bank %>%
mutate(default = ifelse(is.na(default),"NA value",default)) -> temp1
vcd::mosaic(~ default + y, data = temp1, shade = TRUE)
#https://cran.r-project.org/web/packages/vcd/vignettes/strucplot.pdf
## 处理后
bank %>%
mutate(default = ifelse(default=="no" & !is.na(default),"no","other")) -> temp2
vcd::mosaic(~ default + y, data = temp2, shade = TRUE)
}
# 执行
bank <- temp2
```
违约状况的缺失可以单独作为一类，推测是缺失信用数据的可能没有银行卡的使用习惯，营销的成功概率因此降低。
##### education应转换为次序型连续变量
```{r}
if(if_plot){
# 处理前
## 左图
vcd::mosaic(~ education + job, data = bank, shade = TRUE,
labeling_args = list(abbreviate_labs = c(4, 3, 1)))
## 右图
bank %>%
group_by(job, education) %>%
dplyr::summarise(proportion = n()) %>% ungroup %>%
mutate(proportion = proportion/sum(proportion)) %>%
ggplot( aes(x=education, y=job, fill=proportion, label=proportion)) +
geom_tile() +
scale_fill_gradient(low = "#56B4E922",high = colors[6]) +   theme_pubr(legend="right",x.text.angle = -20) +
geom_text(aes(label = paste0(round(proportion*100,2),"%")),color="black", size=3.5)
}
# 处理后
bank %>%
mutate(education = as.character(revalue(education,
c("professional.course" = 14, "university.degree" = 16, "high.school" = 12,
"basic.9y" = 9, "basic.6y" = 6, "basic.4y" = 4, "illiterate" = 1)))) %>%
mutate(education = as.numeric(education)) -> temp
if(if_plot){
ggplot(temp, aes(x = education, y = `job`, fill = ..x..)) +
geom_density_ridges_gradient(na.rm=F,scale = 2, rel_min_height = 0.01, gradient_lwd = 0.04) +
scale_x_continuous(limits=c(xmin=1,xmax=18),breaks= seq(0, 18, by=1)) +
scale_fill_viridis(name = "Year of edu", direction = -1, option = "C") +
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank(),
axis.title.x = element_text(hjust = 0.5))
}
# 执行处理
bank <- temp
```
最后我们可以看出，对于职业的缺失值不能简单认为是一个类别（不是说没有透露职业的人都是因为做的工作不好不愿意说，而是有些高教育的人对工作保密，也不愿意透露）
##### 结婚与不结婚的影响类似，归位一类，简单分为结婚和结过婚！
```{r}
if(if_plot){
# 处理前
temp <- bank
vcd::mosaic(~ marital + y+education  , data = temp, shade = F,
labeling_args = list(abbreviate_labs = c(10, 10, 0)))
vcd::mosaic(~ marital + y+job  , data = temp, shade = F,
labeling_args = list(abbreviate_labs = c(10, 10, 1)))
vcd::mosaic(~ marital + y+ housing  , data = temp, shade = F,
labeling_args = list(abbreviate_labs = c(10, 10, 1)))
}
# 处理后
bank %>%
mutate(marital = revalue(marital, c(
'single' = '0',
'married' = '1',
'divorced'= '1'))) -> temp
if(if_plot){
vcd::mosaic(~ marital + y+education  , data = temp, shade = T,
labeling_args = list(abbreviate_labs = c(10, 10, 0)))
vcd::mosaic(~ marital + y+job  , data = temp, shade = T,
labeling_args = list(abbreviate_labs = c(10, 10, 1)))
vcd::mosaic(~ marital + y+ housing  , data = temp, shade = T,
labeling_args = list(abbreviate_labs = c(10, 10, 1)))
}
# 执行处理
bank %<>%
mutate(marital = revalue(marital, c(
'single' = '0',
'married' = '1',
'divorced'= '1')))
```
可以看到，对因变量的影响不同主要体现在单身层面，而结婚与不结婚之间差异非常小，可以删除。
##### 年龄保留原始形状不做分箱age 与 job|education
```{r}
# 处理前
if(if_plot){
ggarrange(
eda_cata_num("job","age",x_angle=0),
eda_cata_num("education","age",x_angle=0),
ncol=1,common.legend = T)
}
```
### 本次营销情况
#### 提取出年份和“月电话量”特征
```{r}
# 年份特征提取
year_cur = 2008
year_col = c()
flag = 0
for(x in bank$month){
if(x == 'mar' & flag != 1){
year_cur = year_cur +1
flag = 1
}
if(x == "apr"){
flag = 0
}
year_col = append(year_col, year_cur)
}
bank$year <- year_col
bank %<>% relocate(year, .before=month)
# 效果分析
bank %<>%
mutate(month = as.character(month)) %>%
mutate(month = as.numeric(revalue(month,c('apr'=4, 'aug'=8, 'dec'=12,
"jul"=7,"jun"=6,"mar"=3,"may"=5,"nov"=11,"oct"=10,"sep"=9))))
group = "month"
bank %>% nrow -> bank_nrow
prop.table(table(bank$y))[2] %>% as.vector() -> average_line
ggarrange(
# left plot
bank %>%
ggplot(aes(x = !!sym(group), fill = factor(y))) +
geom_bar(position = "stack") +
geom_label(stat = "count",
aes(label = ..count.., y = ..count..),
size=3,
fill=NA,
position = position_dodge(0.9)) +
labs(y="number of observations") + ggtitle("Observations") +
scale_fill_manual(c("fail", "success"), values =colors,na.value = "#5f5f5f") +
scale_x_continuous(limits=c(xmin=1,xmax=12),breaks= seq(0, 12, by=1)) +
theme_pubr()+facet_grid(year~.)+ theme(panel.spacing = unit(2, "lines")),
# right plot
bank %>%
ggplot(aes(x = !!sym(group), fill = factor(y))) +
geom_bar(position = "fill") + ylab("percentage") +
labs(y="number of observations") + ggtitle("% of success in Observations") +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
scale_fill_manual(c("fail", "success"), values =colors,na.value = "#5f5f5f") +
scale_x_continuous(limits=c(xmin=1,xmax=12),breaks= seq(0, 12, by=1)) +
geom_hline(yintercept=average_line, linetype="dashed", color = colors[3]) +
theme_pubr()+facet_grid(year~.)+ theme(panel.spacing = unit(2, "lines")),
ncol = 2, common.legend = TRUE, legend="right")
```
```{r}
# 加入每月电话数量
bank %<>% group_by(year,month) %>%
mutate(monthly_contacts = n()) %>% ungroup %>%
relocate(monthly_contacts, .after = month)
eda_num("monthly_contacts")
```
#### day_of_week没有固定模式
```{r}
# 左图
if(if_plot){
bank %<>% mutate(day_of_week = factor(day_of_week, levels = c("mon","tue","wed","thu","fri")))
bank %>% yesno_to_10() %>% filter(year<=2009)-> temp
vcd::mosaic(~ year +day_of_week+month+y  , data = temp, shade = TRUE,
labeling_args = list(abbreviate_labs = c(4, 10, 4)))
# 右图
group = "day_of_week"
bank %>%
ggplot(aes(x = !!sym(group),
fill = y)) +
geom_bar(position = "fill") +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
scale_fill_manual(values =colors,na.value = "#5f5f5f") +facet_grid(month~year) +
theme_pubr(legend = "right")
}
# day_of_week不稳定 删除
bank %<>% dplyr::select(-day_of_week)
```
#### 保留contact但删除duration
```{r}
if(if_plot){
eda_cata("contact")
eda_withy("contact")
eda_cata_num("contact","duration",flip=T,expand_limits=3,x_angle = 0)
}
#bank %<>% dplyr::select(-duration)
```
### 上轮的相关信息
#### campaign变量离散化程度过高进行截尾处理
- apply(df, 2, function(x){sum(is.na(x))})
```{r}
cut = quantile(bank$campaign,0.9985)
bank %>%
mutate(campaign = ifelse(campaign < cut, campaign, cut)) -> temp
ggarrange(
eda_num("campaign"),
eda_num("campaign",temp),ncol=1,common.legend = T,legend = "right")
```
从图中可以看出，变量在25以后，因此将99.85%分位数的特征cutoff
#### 删除与campain关系不符合的pdays
```{r}
# pdays 与 campaign不符合，所以删除
table(bank$campaign,useNA = "ifany")
table(bank$pdays,useNA = "ifany")
bank %<>% select(-pdays)
```
#### previous与poutcome选择其一
```{r}
table(bank$poutcome,useNA = "ifany")
table(bank$previous,useNA = "ifany")
# eda_num("previous")
# eda_cata("poutcome")
# eda_cata("previous", bank %>% mutate(previous = factor(previous)))
bank %>%
filter(previous>=1) %>%
filter(poutcome!="nonexistent") %>% mutate(poutcome=factor(poutcome)) -> temp
vcd::mosaic(~   previous+y+poutcome  , data = temp , shade = T,
gp = gpar(fill = rep(c(colors[1],colors[3]),each=14)),
labeling_args = list(abbreviate_labs = c(1, 10, 1)))
# 删除有一个打了7次但是没有成功的，应该是偶然因素
bank %>% filter(previous<7)
```
subtract_time <- function(df){
df %>% group_by(year,month) %>%
select(econs) %>%
unique %>%
mutate(month=as.character(str_pad(month, width = 2, pad = "0", side = "left"))) %>%
mutate(time = paste0(year,"-",month,"-01")) %>%
mutate(time = as.Date(time, "%Y-%m-%d"))%>%
pivot_longer(econs, names_to = 'type',values_to = 'value')
}
# 处理前
econs = c("emp.var.rate","cons.price.idx","cons.conf.idx","cons.conf.idx","euribor3m","nr.employed")
bank %>%
subtract_time %>%
ggplot(aes(x=time,y=value)) + geom_line(aes(color=type)) +
scale_x_date(date_labels="%Y-%m",date_breaks  ="1 month") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
facet_grid(type~.,scales="free")  -> p1
# 处理后
bank %>% mutate_at(
vars(econs),
funs((.-mean(.))/sd(.))) -> temp
temp %>%
subtract_time %>%
ggplot(aes(x=time,y=value)) + geom_line(aes(color=type)) +
scale_x_date(date_labels="%Y-%m",date_breaks  ="1 month") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) -> p2
if(if_plot){
ggarrange(p1,p2,ncol=2,common.legend = T)
}
## 数据处理
```{r}
bank %<>% yesno_to_10
bank %<>%
# 离散统一为factor
mutate_if(sapply(bank, is.character), as.factor) %>%
# 连续统一为numeric
mutate_if(sapply(bank, is.integer), as.numeric)
bank %<>% relocate(year,.before=month)
bank %<>%
mutate_if(sapply(bank, is.character), as.factor) %>%
mutate_if(sapply(bank, is.integer), as.numeric)
# 删除marital、job中缺失了一个，并同时缺失education的变量
bank %<>%
filter(!((is.na(marital) | is.na(job)) & is.na(education)))
# 注意 housing和loan的990个缺失是一致的
bank %>%
#filter(is.na(housing)) %>%
filter(is.na(housing) | is.na(loan))
# 缺失情况统计
report_miss <- function(df){
print("行缺失情况")
print(table(apply(df, 1, function(x){sum(is.na(x))})))
print("变量缺失情况")
apply(df, 2, function(x){sum(is.na(x))}) %>% as.data.frame
}
report_miss(bank)
#install.packages("corrplot")
library(corrplot)
bank %>% dplyr::select(where(is.numeric)) %>%
cor() -> cor_matrix
cor_matrix %>% corrplot(method = "ellipse", addCoef.col = "grey")
load("../data/working/bank.RData")
temp %>% dplyr::select(where(is.numeric)) %>%
cor() -> cor_matrix
cor_matrix %>% corrplot(method = "ellipse", addCoef.col = "grey")
temp = bank_rffixed
temp %>% dplyr::select(where(is.numeric)) %>%
cor() -> cor_matrix
cor_matrix %>% corrplot(method = "ellipse", addCoef.col = "grey")
corrplot(cor_matrix,method = "ellipse",type = "upper") #, tl.pos = "d" #order = "hclust"
corrplot(cor_matrix,method = "ellipse",type = "upper") #, tl.pos = "d" #order = "hclust"
corrplot(cor_matrix,type = "lower",addCoef.col = "grey", method = "square", diag = FALSE)
cor_matrix %>% corrplot(method = "ellipse", addCoef.col = "grey")
corrplot(cor_matrix,method = "ellipse",type = "upper") #, tl.pos = "d" #order = "hclust"
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "d")
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "NA ")
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = NA)
#install.packages("corrplot")
library(corrplot)
temp = bank_rffixed
temp %>% dplyr::select(where(is.numeric)) %>%
cor() -> cor_matrix
cor_matrix %>% corrplot(method = "ellipse", addCoef.col = "grey")
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "d")
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "none")#, tl.pos = "d" #order = "hclust"
corrplot(cor_matrix,type = "lower",addCoef.col = "grey", method = "square", diag = FALSE)  #,  cl.pos = "n"
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "none")
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "d")
corrplot(cor_matrix,method = "ellipse",type = "upper",tl.pos = "none")
corrplot(cor_matrix,type = "lower",addCoef.col = "grey", method = "square", diag = FALSE)  #,  cl.pos = "n"
