if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
# Avoid package conflict
select <- dplyr::select
mutate <- dplyr::mutate
summarise <- dplyr::summarise
summarize <- dplyr::summarize
renv::status()
renv::snapshot() # save the state of your project to renv.lock; and
renv::snapshot() # save the state of your project to renv.lock; and
renv::snapshot()
# Install and library the packages
rm(list = ls())
## For data processing
if(!require("magrittr")) install.packages("magrittr")
if(!require("readr")) install.packages("readr")
if(!require("dplyr")) install.packages("dplyr")
if(!require("tidyr")) install.packages("tidyr")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
# Avoid package conflict
select <- dplyr::select
mutate <- dplyr::mutate
summarise <- dplyr::summarise
summarize <- dplyr::summarize
renv::status()   # check sttatus
renv::snapshot() # save the state of your project to renv.lock; and
rm(list = ls())
my_packages <- library()$results[,1]
my_packages
library()$results[,1]
library()$results
(.packages())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
(.packages())
if(!require("renv")) install.packages("renv")
# initialize a new project
renv::init()
# Install and library the packages
## Clear the variable and all packages
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
## For data processing
if(!require("magrittr")) install.packages("magrittr")
if(!require("readr")) install.packages("readr")
if(!require("dplyr")) install.packages("dplyr")
if(!require("tidyr")) install.packages("tidyr")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
# Avoid package conflict
select <- dplyr::select
mutate <- dplyr::mutate
summarise <- dplyr::summarise
summarize <- dplyr::summarize
renv::status()   # check sttatus
renv::snapshot() # create a lockfile capturing the state of a project's R package dependencies. The lockfile can be used to later restore these project's dependencies as required.
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
renv::restore()
(.packages())
renv::restore()
(.packages())
if(!require("renv")) install.packages("renv")
# initialize a new project
renv::init() # Choose 2 if you run this line twice
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
(.packages())
## For data processing
if(!require("magrittr")) install.packages("magrittr")
if(!require("readr")) install.packages("readr")
if(!require("dplyr")) install.packages("dplyr")
if(!require("tidyr")) install.packages("tidyr")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
# Avoid package conflict
select <- dplyr::select
mutate <- dplyr::mutate
summarise <- dplyr::summarise
summarize <- dplyr::summarize
renv::status()   # check sttatus
renv::snapshot()
(.packages())
# Restore the package
## Remove everything except base package
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
(.packages())
renv::restore()
(.packages())
renv::init()
install.packages("magrittr")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("openxlsx")
install.packages("purrr")
install.packages("stringr")
install.packages("ggplot2")
install.packages("cowplot")
install.packages("caret")
install.packages("cowplot")
install.packages("corrplot")
install.packages("DALEX")
install.packages("DescTools")
install.packages("doParallel")
install.packages("GGally")
install.packages("Rmisc")
if(!require("renv")) install.packages("renv")
# initialize a new project
renv::init() # Choose 2 if you run this line twice
# initialize a new project
renv::init() # Choose 2 if you run this line twice
# initialize a new project
renv::init() # Choose 2 if you run this line twice
(.packages())
if(!require("magrittr")) install.packages("magrittr")
install.packages("magrittr")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("openxlsx")
install.packages("purrr")
install.packages("stringr")
install.packages("ggplot2")
install.packages("cowplot")
install.packages("caret")
install.packages("cowplot")
install.packages("corrplot")
install.packages("DALEX")
install.packages("DescTools")
install.packages("doParallel")
install.packages("GGally")
install.packages("Rmisc")
install.packages("PupillometryR")
install.packages("inspectdf")
install.packages("vcd")
install.packages("ggpubr")
install.packages("ggmosaic")
install.packages("scales")
install.packages("ggridges")
install.packages("viridis")
install.packages("PupillometryR")
install.packages("PupillometryR")
install.packages("itsadug")
install.packages("lattice")
install.packages("MASS")
install.packages("nnet")
install.packages("mice")
install.packages("missForest")
# Avoid package conflict
select <- dplyr::select
mutate <- dplyr::mutate
summarise <- dplyr::summarise
summarize <- dplyr::summarize
renv::status()
renv::snapshot() # create a lockfile capturing the state of a project's R package dependencies.
renv::snapshot()
renv::status()
# Restore the package
## Remove everything except base package
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
(.packages())
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
(.packages())
rm(list = ls())
lapply(names(sessionInfo()$otherPkgs), function(pkgs)
detach(
paste0('package:', pkgs),
character.only = T,
unload = T,
force = T
))
(.packages())
## Restore package we stored in the "Environment control" section.
renv::restore()
(.packages())
## For data processing
if(!require("magrittr")) install.packages("magrittr")
## For data processing
if(!require("magrittr")) install.packages("magrittr")
if(!require("readr")) install.packages("readr")
if(!require("dplyr")) install.packages("dplyr")
if(!require("tidyr")) install.packages("tidyr")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
## Restore package we stored in the "Environment control" section.
renv::restore()
(.packages())
## For data processing
if(!require("magrittr")) install.packages("magrittr")
if(!require("readr")) install.packages("readr")
if(!require("dplyr")) install.packages("dplyr")
if(!require("tidyr")) install.packages("tidyr")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
## Restore package we stored in the "Environment control" section.
renv::restore()
(.packages())
renv::restore()
## Restore package we stored in the "Environment control" section.
renv::restore()
## For data processing
if(!require("magrittr")) install.packages("magrittr")
if(!require("readr")) install.packages("readr")
if(!require("dplyr")) install.packages("dplyr")
if(!require("tidyr")) install.packages("tidyr")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("openxlsx")) install.packages("openxlsx")
## For visulization
if(!require("purrr")) install.packages("purrr")
if(!require("stringr")) install.packages("stringr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("cowplot")) install.packages("cowplot")
if(!require("caret")) install.packages("caret")
if(!require("cowplot")) install.packages("cowplot")
if(!require("corrplot")) install.packages("corrplot")
if(!require("DALEX")) install.packages("DALEX")
if(!require("DescTools")) install.packages("DescTools")
if(!require("doParallel")) install.packages("doParallel")
if(!require("GGally")) install.packages("GGally")
if(!require("Rmisc")) install.packages("Rmisc")
if(!require("PupillometryR")) install.packages("PupillometryR")
if(!require("inspectdf")) install.packages("inspectdf")
if(!require("vcd")) install.packages("vcd")
if(!require("ggpubr")) install.packages("ggpubr")
if(!require("ggmosaic")) install.packages("ggmosaic")
if(!require("scales")) install.packages("scales")
if(!require("ggridges")) install.packages("ggridges")
if(!require("viridis")) install.packages("viridis")
## For missing value handle
if(!require("lattice")) install.packages("lattice")
if(!require("MASS")) install.packages("MASS")
if(!require("nnet")) install.packages("nnet")
if(!require("mice")) install.packages("mice")
if(!require("missForest")) install.packages("missForest")
(.packages())
# Data Input
## Please run setwd("~/yourdir/bank-marketing-strategy-analysis/code") (change yourdir to yours).
## Then, all the file dictionary work.
bank <- read_delim("../data/origin/bank-additional/bank-additional-full.csv", ";",
escape_double = FALSE, trim_ws = TRUE)
# Plotting theme
text_theme = theme(
plot.title = element_text(face="bold",
hjust = 0.5,
size = 16),
plot.subtitle = element_text(face="bold",
hjust = 0.5,
size = 4,
margin = c(t = 13, r = 0, b = 17, l = 0)),
axis.title = element_text(size=14),
legend.title = element_text(size=14))
colors <- c("#E69F00", "#56B4E9", "#009E73","#d9a99e",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7",
"#F4EDCA",  "#9a3820",  "#a7a97c")
source("../code/funcs.R")
my_glimpse(file = "../tables/part2/data_report.xlsx")
if_plot = F # Switch upon plotting+data processing or only data processing.
if(if_plot){
inspect_cat(bank, show_plot = TRUE)}
# Single Plot
if(if_plot){
bank %>% keep(is.numeric) %>% colnames -> temp
bank %>%
select(c(y,temp)) %>%
pivot_longer(temp,'key',values_to = 'value') %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free", ncol=5,nrow=2) +
geom_histogram(aes(fill=y)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.5),legend.position = "bottom") +
scale_fill_manual("Result", values =colors,na.value = "#5f5f5f") +
labs(x=NULL,y=NULL) #+ theme_pubr()
# Pair Plot
my_cor = function(data, mapping, alignPercent = 0.6, method = "pearson",
use = "complete.obs", corAlignPercent = NULL, corMethod = NULL,
corUse = NULL, ...) {
return(GGally::ggally_cor(data, mapping)+theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()))
}
smooth <- function(data, mapping, method = "loess",formula = 'y ~ x', ...) {
p <- ggplot(data = data, mapping = mapping) +
geom_point(...,alpha=0.14) +
geom_smooth(...,method = method,formula = formula,size = 1,...)
p
}
smooth_lm <- function(data, mapping, method = "lm",formula = 'y ~ x', ...) {
p <- ggplot(data = data, mapping = mapping) +
geom_point(...,alpha=0.14) +
geom_smooth(...,method = method,formula = formula,size = 1,...)
p
}
bank %>% select(where(is.numeric)) %>% colnames -> numeric_vars
bank %>% select(c("y", numeric_vars)) %>%
ggpairs(aes(color=y),
upper = list(continuous = smooth_lm,
combo = "dot",
discrete = "box",
na = "na"),
lower = list(continuous = my_cor,
combo = "box_no_facet",
discrete = "facetbar",
na = "na"),switch="y",cardinality_threshold = 16) -> p
}
